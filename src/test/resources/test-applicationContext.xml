<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb?serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="test1234"/>
    </bean>
    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>
    <bean id="sqlService" class="springbook.user.sqlService.BaseSqlService">
        <property name="sqlReader" ref="sqlReader"/>
        <property name="sqlRegistry" ref="sqlRegistry"/>
    </bean>
<!--    <bean id="sqlService" class="springbook.user.sqlService.OxmSqlService">-->
<!--&lt;!&ndash;        <property name="unmarshaller" ref="unmarshaller"/>&ndash;&gt;-->
<!--        <property name="sqlReader" ref="sqlReader"/>-->
<!--        <property name="sqlRegistry" ref="sqlRegistry"/>-->
<!--    </bean>-->

<!--    <bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">-->
<!--        <property name="contextPath" value="springbook.user.sqlService.jaxb"/>-->
<!--    </bean>-->

    <bean id="sqlReader" class="springbook.user.sqlService.JaxbXmlSqlReader">
        <property name="sqlmapFile" value="sqlmap.xml"/>
    </bean>
    <bean id="sqlRegistry" class="springbook.user.sqlService.ConcurrentHashMapSqlRegistry">
    </bean>

    <bean id="userService" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="mailSender" class="springbook.user.service.DummyMailSender"/>
    <bean id="message"
          class="springbook.learningtest.spring.factorybean.MessageFactoryBean">
        <property name="text" value="Factory Bean"/>
    </bean>
<!--    어드바이스-->
<!--    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
<!--        <property name="transactionManager" ref="transactionManager"></property>-->
<!--        <property name="transactionAttributes">-->
<!--            <props>-->
<!--                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>-->
<!--                <prop key="*">PROPAGATION_REQUIRED</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->
<!--    포인트컷-->
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </bean>
<!--    어드바이저-->
    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>
<!--&lt;!&ndash;    프록시팩토리빈&ndash;&gt;-->
<!--    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">-->
<!--        <property name="target" ref="userServiceImpl" />-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--                <value>transactionAdvisor</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->
<!--    DefaultAdvisorAutoProxyCreator 등록-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
<!--    테스트용-->
    <bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService"
          parent="userService"/>
    <aop:config>
<!--        <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>
    <tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <tx:annotation-driven/>
    <context:annotation-config/>

</beans>